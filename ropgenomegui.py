# -*- coding: utf-8 -*-
"""
Created on Mon Aug 13 14:39:55 2018

@author: Justin Macrae
"""

#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.14
# In conjunction with Tcl version 8.6
#    Aug 13, 2018 02:39:17 PM

'''
This is the code for the GUI generate, calling from the file subset.
Subset holds our functions for performing analysis.
    
'''

import sys
import subset as genomeapp
import os

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import mygui_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = New_Toplevel (root)
    mygui_support.init(root, top)
    root.mainloop()

w = None
def create_New_Toplevel(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = New_Toplevel (w)
    mygui_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_New_Toplevel():
    global w
    w.destroy()
    w = None
    



class New_Toplevel:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#75FF33'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#75FF33' # X11 color: 'gray85'
        _ana1color = '#75FF33' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 

        top.geometry("1133x730+1030+239")
        top.title("Genomic Toolkit")
        top.configure(background="#99cc99")



        self.Button1 = Button(top)
        self.Button1.place(relx=0.25, rely=0.4, height=100, width=320) #115
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#ffffff")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text=''' A) Datapoint Hits Across Entire MRNA''')
        self.Button1.configure(command=genomeapp.pta1v2)


        self.Button2 = Button(top)
        self.Button2.place(relx=0.25, rely=0.57, height=80, width=320)
        self.Button2.configure(activebackground="#d9d9d9")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#ffffff")
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(text='''B) Datapoint Hits Across Exons''')
        self.Button2.configure(command=genomeapp.ptb)

        self.Button3 = Button(top)
        self.Button3.place(relx=0.25, rely=0.71, height=80, width=320)
        self.Button3.configure(activebackground="#d9d9d9")
        self.Button3.configure(activeforeground="#000000")
        self.Button3.configure(background="#ffffff")
        self.Button3.configure(disabledforeground="#a3a3a3")
        self.Button3.configure(foreground="#000000")
        self.Button3.configure(highlightbackground="#d9d9d9")
        self.Button3.configure(highlightcolor="black")
        self.Button3.configure(pady="0")
        self.Button3.configure(text='''C) Datapoint Hits Across All Exons, in N groups''')
        self.Button3.configure(command=genomeapp.partc)
        
        self.ButtonProm = Button(top)
        self.ButtonProm.place(relx=0.25, rely=0.85, height=80, width=320)
        self.ButtonProm.configure(activebackground="#d9d9d9")
        self.ButtonProm.configure(activeforeground="#000000")
        self.ButtonProm.configure(background="#ffffff")
        self.ButtonProm.configure(disabledforeground="#a3a3a3")
        self.ButtonProm.configure(foreground="#000000")
        self.ButtonProm.configure(highlightbackground="#d9d9d9")
        self.ButtonProm.configure(highlightcolor="black")
        self.ButtonProm.configure(pady="0")
        self.ButtonProm.configure(text='''D) Datapoint Hits Across Promoter/Downstream, N groups''')
        self.ButtonProm.configure(command=genomeapp.promoter)

        self.Button4 = Button(top)
        self.Button4.place(relx=0.55, rely=0.6, height=100, width=220)
        self.Button4.configure(activebackground="#d9d9d9")
        self.Button4.configure(activeforeground="#000000")
        self.Button4.configure(background="#ffffff")
        self.Button4.configure(disabledforeground="#a3a3a3")
        self.Button4.configure(foreground="#000000")
        self.Button4.configure(highlightbackground="#d9d9d9")
        self.Button4.configure(highlightcolor="black")
        self.Button4.configure(pady="0")
        self.Button4.configure(text='''3 and 5 Filter''')
        self.Button4.configure(command=genomeapp.threeandfive)

        self.menubar = Menu(top,font="TkMenuFont",bg='#3fd849',fg=_fgcolor)
        top.configure(menu = self.menubar)



        self.Button5 = Button(top)
        self.Button5.place(relx=0.55, rely=0.4, height=100, width=220)
        self.Button5.configure(activebackground="#d9d9d9")
        self.Button5.configure(activeforeground="#000000")
        self.Button5.configure(background="#ffffff")
        self.Button5.configure(disabledforeground="#a3a3a3")
        self.Button5.configure(foreground="#000000")
        self.Button5.configure(highlightbackground="#d9d9d9")
        self.Button5.configure(highlightcolor="black")
        self.Button5.configure(pady="0")
        self.Button5.configure(text='''Parse a file for only MRNA''')
        self.Button5.configure(command=genomeapp.parsetextmrna)

        self.Button6 = Button(top)
        self.Button6.place(relx=0.55, rely=0.8, height=100, width=220)
        self.Button6.configure(activebackground="#d9d9d9")
        self.Button6.configure(activeforeground="#000000")
        self.Button6.configure(background="#ffffff")
        self.Button6.configure(disabledforeground="#a3a3a3")
        self.Button6.configure(foreground="#000000")
        self.Button6.configure(highlightbackground="#d9d9d9")
        self.Button6.configure(highlightcolor="black")
        self.Button6.configure(pady="0")
        self.Button6.configure(text='''Parse a file for Exons and MRNA''')
        self.Button6.configure(command=genomeapp.parsetextgene)

        self.Message1 = Message(top)
        self.Message1.place(relx=0.2, rely=0.04, relheight=0.2, relwidth=0.55) #0.55
        self.Message1.configure(background="#ffffff")                        
        self.Message1.configure(foreground="#000000")
        self.Message1.configure(highlightbackground="#d9d9d9")
        self.Message1.configure(highlightcolor="black")
        self.Message1.configure(text='''This application was developed in order to group together the various tools created during the Summer 2018 ROP.''')
        self.Message1.configure(width=622)
    
        
       




if __name__ == '__main__':
    vp_start_gui()